(window.webpackJsonp=window.webpackJsonp||[]).push([[172],{626:function(e,t,r){"use strict";r.r(t);var a=r(42),v=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"vue-的生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue-的生命周期"}},[e._v("#")]),e._v(" vue 的生命周期")]),e._v(" "),r("h2",{attrs:{id:"官方图例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#官方图例"}},[e._v("#")]),e._v(" 官方图例")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://cn.vuejs.org/images/lifecycle.png",alt:"vue 生命周期图例"}})]),e._v(" "),r("h2",{attrs:{id:"解释"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解释"}},[e._v("#")]),e._v(" 解释")]),e._v(" "),r("h3",{attrs:{id:"beforecreate-created"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#beforecreate-created"}},[e._v("#")]),e._v(" beforeCreate - created")]),e._v(" "),r("p",[e._v("这个阶段是初始化阶段")]),e._v(" "),r("p",[e._v("主要是在 vue 的实例上初始化一些属性，事件以及响应式数据。")]),e._v(" "),r("p",[e._v("比如： props， methods， computed， peovide， data， inject 等")]),e._v(" "),r("p",[e._v("也就是说，等到 created 时，vue 的实例的属性以及初始化好了，data 已近可以拿到。")]),e._v(" "),r("p",[e._v("如果是服务端渲染的话，这时候就可以发送网络请求去拿到数据了。")]),e._v(" "),r("p",[e._v("所以，我们的 created 钩子函数是可以发送请求的。")]),e._v(" "),r("h3",{attrs:{id:"created-beforemount"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#created-beforemount"}},[e._v("#")]),e._v(" created - beforeMount")]),e._v(" "),r("p",[e._v("这个阶段是模板编译阶段。")]),e._v(" "),r("p",[e._v("主要做的是将模板编译为渲染函数，如果在运行时的构建版本中执行 new Vue(), 则不会出现这个阶段。")]),e._v(" "),r("p",[e._v("运行时阶段，打包时，vue 文件已经编译成了 js， 模板已经编译成了渲染函数，因此会直接跳过这个阶段。")]),e._v(" "),r("h3",{attrs:{id:"beforemount-mounted"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#beforemount-mounted"}},[e._v("#")]),e._v(" beforeMount - mounted")]),e._v(" "),r("p",[e._v("这个阶段是挂载阶段。")]),e._v(" "),r("p",[e._v("这个阶段，vue 的实例会挂载到 dom 元素上 (el：指定了挂载到哪个 dom 元素)")]),e._v(" "),r("p",[e._v("也就是说，之前的虚拟 dom (js 对象)，要被渲染成真实 dom 对象。")]),e._v(" "),r("p",[e._v("这是时候，我们可以操作相应的 dom 元素。")]),e._v(" "),r("p",[e._v("挂载过程中，Watcher 会持续跟踪依赖的变化。")]),e._v(" "),r("p",[e._v("如果是客户端渲染的话，可以在这个阶段去发送网络请求。")]),e._v(" "),r("h3",{attrs:{id:"beforeupdate-updated"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#beforeupdate-updated"}},[e._v("#")]),e._v(" beforeUpdate - updated")]),e._v(" "),r("p",[e._v("这个阶段是更新阶段")]),e._v(" "),r("p",[e._v("挂载完成后， Watcher 会实时监控数据的变化，一旦数据变化，就会通知相关的依赖去更新")]),e._v(" "),r("p",[e._v("虚拟 dom 会重新渲染视图。")]),e._v(" "),r("p",[e._v("在渲染视图之前会触发 beforeUpdate。")]),e._v(" "),r("p",[e._v("渲染完成之后会触发 updated")]),e._v(" "),r("h3",{attrs:{id:"beforedestroy-destroyed"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#beforedestroy-destroyed"}},[e._v("#")]),e._v(" beforeDestroy - destroyed")]),e._v(" "),r("p",[e._v("这个阶段是卸载 vue 的阶段")]),e._v(" "),r("p",[e._v("这个阶段，vue 会将自身从父组件中删除，取消实例上所有的追踪并且移除所有事件监听。")]),e._v(" "),r("p",[e._v("destroyed 貌似没啥作用。")]),e._v(" "),r("p",[e._v("beforeDestroy 可以在组件卸载之前保留一些状态，比如之前停留的位置。")])])}),[],!1,null,null,null);t.default=v.exports}}]);