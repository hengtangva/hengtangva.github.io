(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{515:function(t,s,a){"use strict";a.r(s);var v=a(42),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"打包-hash-文件名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包-hash-文件名"}},[t._v("#")]),t._v(" 打包 hash 文件名")]),t._v(" "),a("p",[t._v("打包后app.6e54c72e.js为什么是这种形式？怎么得到的？有什么作用？")]),t._v(" "),a("p",[t._v("这是字节的一道面试题，主要就这个题目了解一下打包后的文件名称。")]),t._v(" "),a("p",[t._v("假设你打包好一个文件后，客户端请求到看这个文件，如果有缓存期限的话，在这个时间内是不会再请求的。")]),t._v(" "),a("p",[t._v("如果，在这期限你文件有改动了，重新打包了呢？")]),t._v(" "),a("p",[t._v("咋办，于是，为了让客户端识别，我们最好重新生成一个名字，这样，客户端请，发现这个文件本地没有(实际是本地文件改动版)")]),t._v(" "),a("p",[t._v("于是，它就又重新去请求了。")]),t._v(" "),a("p",[t._v("要重新生成名字，而且还不重复，随机生成 hash 值就是一个很好的解决办法。")]),t._v(" "),a("p",[t._v("当然，像 js ，css 等文件会这么做， html 文件就不需要了，因为你每次访问都会重新请求的。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("关于 webpack 如何随机生成 hash 文件名的这里先放一放，等系统学 webpack 再补充。")]),t._v(" "),a("p",[t._v("https://zhuanlan.zhihu.com/p/31456808")])])}),[],!1,null,null,null);s.default=_.exports}}]);