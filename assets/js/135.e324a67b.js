(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{566:function(t,s,a){"use strict";a.r(s);var v=a(42),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"css-选择器的优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-选择器的优先级"}},[t._v("#")]),t._v(" css 选择器的优先级")]),t._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("之前只知道 !important > 内联样式 > id > class > 标签")]),t._v(" "),a("p",[t._v("其实这里面也有一套规则，还是深入了解一下吧。")]),t._v(" "),a("h2",{attrs:{id:"优先级的计算方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优先级的计算方法"}},[t._v("#")]),t._v(" 优先级的计算方法")]),t._v(" "),a("ol",[a("li",[t._v("首先，!important 是个例外。")])]),t._v(" "),a("p",[t._v("只要加上这个选择器，就会覆盖所有的选择器。")]),t._v(" "),a("p",[t._v("一般可以用来去覆盖内联元素的样式，比如用其他的组件库，如果它封装好的内联样式想改的话，可以用它。")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[t._v("接下来就是内联样式了，没有 !important 的话，内联样式是优先级最高的。")])]),t._v(" "),a("li",[a("p",[t._v("排在这之后的是 id 选择器，如果有一个样式是用两个 id 选择的话，它的优先级肯定是高于只用一个 id 选择器的。")])])]),t._v(" "),a("p",[t._v("所以我们可以得出结论是，都有 id 选择的情况下，选择器越多，优先级就越高。")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("p",[t._v("然后再是我们的 类选择器，伪类，属性选择器(这个貌似用的较少)。它们也和 id 选择器一样，用的越多，优先级越高")])]),t._v(" "),a("li",[a("p",[t._v("其次才是我们的标签选择器，伪元素，同样是越多优先级越高。")])]),t._v(" "),a("li",[a("p",[t._v("最后是我们的 * 选择符，匹配所有元素，但它的优先级是最低的")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("由于 css 是层叠样式,所以相同的优先级，后面是会覆盖前面的")])])])}),[],!1,null,null,null);s.default=_.exports}}]);