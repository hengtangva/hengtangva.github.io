(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{553:function(s,t,a){"use strict";a.r(t);var n=a(42),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"解决跨域-plus"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决跨域-plus"}},[s._v("#")]),s._v(" 解决跨域 plus")]),s._v(" "),a("p",[s._v("跨域的方式有好多 jsonp， cores ，代理服务器 等等")]),s._v(" "),a("h2",{attrs:{id:"禁用浏览器的同源策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#禁用浏览器的同源策略"}},[s._v("#")]),s._v(" 禁用浏览器的同源策略")]),s._v(" "),a("p",[s._v("直接禁用浏览器的同源策略很方便，一行代码不用写")]),s._v(" "),a("p",[s._v("这里以 Chrome 为例")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("在桌面创建一个 Chrome 的快捷方式，这个快捷方式，就是我们禁用了同源策略的浏览器")])]),s._v(" "),a("li",[a("p",[s._v("新建一个文件夹，留作备用，比如我就在桌面建了一个文件夹，地址为 C:/User/Administrator/DeskTop/chromeDev")])]),s._v(" "),a("li",[a("p",[s._v("右击，找到属性，快捷方式的目录下，把目标(T) 这个属性修改一下")])]),s._v(" "),a("li",[a("p",[s._v("在其后面加上，--disable-web-security --user-data-dir='C:/User/Administrator/DeskTop/chromeDev'")])]),s._v(" "),a("li",[a("p",[s._v("点击确定，就 ok 了， 这个快捷方式的 chrome 就是不使用同源策略的了。")])])]),s._v(" "),a("h2",{attrs:{id:"vue-中-用-proxy-做一层反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-中-用-proxy-做一层反向代理"}},[s._v("#")]),s._v(" vue 中 用 proxy 做一层反向代理")]),s._v(" "),a("p",[s._v("这是开发时比较推荐的方式。")]),s._v(" "),a("p",[s._v("在根文件目录下，新建一个 vue.config.js  文件")]),s._v(" "),a("p",[s._v("然后做如下配置：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    devServer"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 默认匹配到 /api 的请求就走这里的跨域")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/api'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                target"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'url'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 所要跨域的 url")]),s._v("\n                changeOrigin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 支持跨域")]),s._v("\n                ws"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开启 web-soket")]),s._v("\n                pathRewrite"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^/api'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最后我们把请求 url 的 api 去掉")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("然后重启服务，就可以支持跨域了。")]),s._v(" "),a("p",[s._v("这里要提一点，上述方法需要有 vue-cli 。")]),s._v(" "),a("p",[s._v("之前接手的项目不是用 vue-cli 搭建的，怎样试都不成功。")]),s._v(" "),a("p",[s._v("这种情况要在根目录下，新建 webpack.config.js 文件，再做上述配置。")]),s._v(" "),a("h2",{attrs:{id:"nginx-做代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-做代理"}},[s._v("#")]),s._v(" Nginx 做代理")]),s._v(" "),a("p",[s._v("nginx 做代理跨域主要是解决上线之后的跨域问题，因为上线后，之前的 Proxy 就没用了。")])])}),[],!1,null,null,null);t.default=r.exports}}]);