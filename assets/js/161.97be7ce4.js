(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{609:function(s,t,a){"use strict";a.r(t);var e=a(42),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"get-和-post-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-和-post-区别"}},[s._v("#")]),s._v(" get 和 post 区别")]),s._v(" "),a("p",[s._v("其实 get 和 post 本质是没有区别的，它们都是基于 TCP 传输，传输上没有差别。")]),s._v(" "),a("p",[s._v("只要服务器支持，你完全可以在 get 里传 body，post 啥都不传。")]),s._v(" "),a("p",[s._v("但是，考虑一般情况，我们还是挑一些，很明显的区别。")]),s._v(" "),a("h2",{attrs:{id:"安全性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全性"}},[s._v("#")]),s._v(" 安全性")]),s._v(" "),a("p",[s._v("get 在 url 中传参，post 在 request body 中传参。")]),s._v(" "),a("p",[s._v("貌似是 post 更安全，但是实际上是，")]),s._v(" "),a("p",[s._v("只要用 HTTP ，那大家都是明文传输，抓包工具都能抓到，都不安全。")]),s._v(" "),a("p",[s._v("如果都用 HTTPS 那么大家都经过 SSL 加密了，大家都是安全的。")]),s._v(" "),a("h2",{attrs:{id:"报文的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#报文的区别"}},[s._v("#")]),s._v(" 报文的区别")]),s._v(" "),a("p",[a("strong",[s._v("get")])]),s._v(" "),a("p",[s._v("根据规范，GET 是要在 url 中传参的，形式如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("php"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("qiming"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTTP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.1")]),s._v("\nHost"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" localhost\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("一般传参是 ? 接参数，参数之间用 & 分隔，你也可以这样做。用 / 分隔参数和值")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("http"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("chengqm"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("不过 服务器接收到 TCP 报文后，是用正则解析的，所以，最好用第一种，因为大部分服务器都是用第一种正则解析的(你自己的服务器随便)")]),s._v(" "),a("p",[a("strong",[s._v("post")])]),s._v(" "),a("p",[s._v("post 是在请求报文实体主体中传递值的，即 request body。如下面例子:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("POST")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("php "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTTP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.1")]),s._v("\n\nHost"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" localhost\nContent"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" application"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("www"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("form"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("urlencoded\n\nname"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("qiming"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("想额外说一点是，首部的 Content-Type 字段，application 表示 二进制，后面是表单形式。")]),s._v(" "),a("p",[s._v("不过，你完全也可以不按照规范来，还是那句话，只要你的服务器能够支持。")])])}),[],!1,null,null,null);t.default=r.exports}}]);