(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{627:function(e,t,r){"use strict";r.r(t);var v=r(42),s=Object(v.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"vue-为什么用-proxy-来进行重构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue-为什么用-proxy-来进行重构"}},[e._v("#")]),e._v(" vue 为什么用 proxy 来进行重构")]),e._v(" "),r("p",[e._v("之前也是了解到，vue3 中放弃了 Object.definePropery 而转用 proxy 进行相应式的构建。")]),e._v(" "),r("p",[e._v("之前被问到的时候，对于这方面了解不怎么深，因此回答的很差。")]),e._v(" "),r("p",[e._v("说 proxy 上有更多的捕获器，然后重构之后用的也仅仅还是 get 和 set 捕获器。")]),e._v(" "),r("p",[e._v("因此，还是总结一下。也当顺便了解一下，之前 Object.definePropery 的问题，和 proxy 的优势。")]),e._v(" "),r("h2",{attrs:{id:"新增属性的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#新增属性的问题"}},[e._v("#")]),e._v(" 新增属性的问题")]),e._v(" "),r("p",[e._v("看了很多博客，感觉有些很扯，不过有一点是认同的。就是新增属性的问题。")]),e._v(" "),r("ul",[r("li",[e._v("Object.defineProperty 是对单个属性进行劫持，而劫持是在 create 之前，init 完成的。")])]),e._v(" "),r("p",[e._v("所以，之后再新增属性时，该属性时没有劫持的，也就导致了它不是响应式的，不过 vue 里提供了 vm.$set 这方法去为新增的属性做劫持，")]),e._v(" "),r("ul",[r("li",[e._v("Proxy 是对整个对象进行代理，也就是说可以直接解决这个问题，新增属性就没必要自己再去为他设置劫持了。")])])])}),[],!1,null,null,null);t.default=s.exports}}]);