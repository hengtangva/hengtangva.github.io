(window.webpackJsonp=window.webpackJsonp||[]).push([[171],{622:function(t,e,a){"use strict";a.r(e);var n=a(42),v=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"v-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-model"}},[t._v("#")]),t._v(" v-model")]),t._v(" "),a("p",[t._v("v-model 类似于一个语法糖")]),t._v(" "),a("p",[t._v("我们知道，mustache 语法中的数据，是响应式的，但是，属性里的值并不是。")]),t._v(" "),a("p",[t._v("所以，如果我们想让属性里的值能跟着 data 变而变，是可以用 v-bind 的。 也可以用语法糖 :")]),t._v(" "),a("p",[t._v("如果动态修改了属性的值，也想 data 跟着改变的话，可以监听属性的改变时间，onchange")]),t._v(" "),a("p",[t._v("这种双向绑定，是可以用 v-model 直接解决的。它就是实现了上述两种方法。")])])}),[],!1,null,null,null);e.default=v.exports}}]);